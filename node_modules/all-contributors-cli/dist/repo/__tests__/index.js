"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _ = _interopRequireDefault(require(".."));

jest.mock('../github');
jest.mock('../gitlab');

var githubAPI = require('../github');

var gitlabAPI = require('../gitlab');

test('get choices for init command', function () {
  expect(_.default.getChoices()).toEqual([{
    value: 'github',
    name: 'GitHub'
  }, {
    value: 'gitlab',
    name: 'GitLab'
  }]);
});
test('get hostname for a given repo type', function () {
  expect(_.default.getHostname('github')).toEqual('https://github.com');
  expect(_.default.getHostname('github', 'http://my-github.com')).toEqual('http://my-github.com');
  expect(_.default.getHostname('gitlab')).toEqual('https://gitlab.com');
  expect(_.default.getHostname('gitlab', 'http://my-gitlab.com:3000')).toEqual('http://my-gitlab.com:3000');
  expect(_.default.getHostname('other')).toBe(null);
});
test('get repo name given a repo type', function () {
  expect(_.default.getTypeName('github')).toEqual('GitHub');
  expect(_.default.getTypeName('gitlab')).toEqual('GitLab');
  expect(_.default.getTypeName('other')).toBe(null);
});
test('get user info calls underlying APIs', function () {
  githubAPI.getUserInfo.mockImplementationOnce(function () {
    return {
      login: 'nodisplayname',
      name: 'nodisplayname',
      avatar_url: 'https://avatars2.githubusercontent.com/u/3869412?v=3&s=400',
      profile: 'https://github.com/nodisplayname'
    };
  });
  gitlabAPI.getUserInfo.mockImplementationOnce(function () {
    return {
      login: 'nodisplayname',
      name: 'nodisplayname',
      avatar_url: 'http://www.gravatar.com/avatar/3186450a99d1641bf75a44baa23f0826?s=80\u0026d=identicon',
      profile: 'https://gitlab.com/nodisplayname'
    };
  });
  expect(_.default.getUserInfo('nodisplayname', 'github')).toEqual({
    login: 'nodisplayname',
    name: 'nodisplayname',
    avatar_url: 'https://avatars2.githubusercontent.com/u/3869412?v=3&s=400',
    profile: 'https://github.com/nodisplayname'
  });
  expect(_.default.getUserInfo('nodisplayname', 'gitlab')).toEqual({
    login: 'nodisplayname',
    name: 'nodisplayname',
    avatar_url: 'http://www.gravatar.com/avatar/3186450a99d1641bf75a44baa23f0826?s=80\u0026d=identicon',
    profile: 'https://gitlab.com/nodisplayname'
  });
  expect(_.default.getUserInfo('nodisplayname', 'other')).toBe(null);
});