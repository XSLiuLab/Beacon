"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _fp = _interopRequireDefault(require("lodash/fp"));

var _formatContributor = _interopRequireDefault(require("../format-contributor"));

var _contributors = _interopRequireDefault(require("./fixtures/contributors.json"));

function fixtures() {
  return {
    options: {
      projectOwner: 'all-contributors',
      projectName: 'all-contributors-cli',
      repoType: 'github',
      repoHost: 'https://github.com',
      imageSize: 150
    }
  };
}

test('format a simple contributor', function () {
  var contributor = _fp.default.assign(_contributors.default.kentcdodds, {
    contributions: ['review']
  });

  var _fixtures = fixtures(),
      options = _fixtures.options;

  expect((0, _formatContributor.default)(options, contributor)).toBe('<a href="http://kentcdodds.com"><img src="https://avatars1.githubusercontent.com/u/1500684" width="150px;" alt="Kent C. Dodds"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href="#review-kentcdodds" title="Reviewed Pull Requests">üëÄ</a>');
});
test('format contributor with complex contribution types', function () {
  var contributor = _contributors.default.kentcdodds;

  var _fixtures2 = fixtures(),
      options = _fixtures2.options;

  expect((0, _formatContributor.default)(options, contributor)).toBe('<a href="http://kentcdodds.com"><img src="https://avatars1.githubusercontent.com/u/1500684" width="150px;" alt="Kent C. Dodds"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href="https://github.com/all-contributors/all-contributors-cli/commits?author=kentcdodds" title="Documentation">üìñ</a> <a href="#review-kentcdodds" title="Reviewed Pull Requests">üëÄ</a> <a href="#question-kentcdodds" title="Answering Questions">üí¨</a>');
});
test('format contributor using custom template', function () {
  var contributor = _contributors.default.kentcdodds;

  var _fixtures3 = fixtures(),
      options = _fixtures3.options;

  options.contributorTemplate = '<%= contributor.name %> is awesome!';
  expect((0, _formatContributor.default)(options, contributor)).toBe('Kent C. Dodds is awesome!');
});
test('default image size to 100', function () {
  var contributor = _fp.default.assign(_contributors.default.kentcdodds, {
    contributions: ['review']
  });

  var _fixtures4 = fixtures(),
      options = _fixtures4.options;

  delete options.imageSize;
  expect((0, _formatContributor.default)(options, contributor)).toBe('<a href="http://kentcdodds.com"><img src="https://avatars1.githubusercontent.com/u/1500684" width="100px;" alt="Kent C. Dodds"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href="#review-kentcdodds" title="Reviewed Pull Requests">üëÄ</a>');
});
test('format contributor with pipes in their name', function () {
  var contributor = _contributors.default.pipey;

  var _fixtures5 = fixtures(),
      options = _fixtures5.options;

  expect((0, _formatContributor.default)(options, contributor)).toBe('<a href="http://github.com/chrisinajar"><img src="https://avatars1.githubusercontent.com/u/1500684" width="150px;" alt="Who &#124; Needs &#124; Pipes?"/><br /><sub><b>Who &#124; Needs &#124; Pipes?</b></sub></a><br /><a href="https://github.com/all-contributors/all-contributors-cli/commits?author=pipey" title="Documentation">üìñ</a>');
});
test('format contributor with no github account', function () {
  var contributor = _contributors.default.nologin;

  var _fixtures6 = fixtures(),
      options = _fixtures6.options;

  expect((0, _formatContributor.default)(options, contributor)).toBe('<img src="https://avatars1.githubusercontent.com/u/1500684" width="150px;" alt="No Github Account"/><br /><sub><b>No Github Account</b></sub><br /><a href="#translation" title="Translation">üåç</a>');
});